plugins {
    id 'checkstyle'
    id 'distribution'
    id 'java-library'
    id 'maven-publish'
}

group 'org.example'
version '0.0.3'

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion '8.44'
    configFile file("$projectDir/config/checkstyle/google_checks.xml")
    maxWarnings 0
    maxErrors 0
}

java {
    // generate a jar with complete source from this repo
    withSourcesJar()
    // generate a jar with html files for javadocs from this repo
    withJavadocJar()
}

distributions {
    main {
        distributionBaseName = 'binaries'
        contents {
            from 'zipped/'
        }
    }
}

compileJava {
    // warn everything except switch case fallthrough
    options.compilerArgs << "-Xlint:all" << "-Xlint:-fallthrough"
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Version': "$archiveVersion",
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/krishna-elear/JitPackTest")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            artifactId "$rootProject.name".toLowerCase()
            from components.java

            artifact distZip
        }
    }
}
